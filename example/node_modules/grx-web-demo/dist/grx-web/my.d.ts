import { IncomingMessage, ServerResponse } from "http";
interface Ctx {
    req: IncomingMessage;
    res: ServerResponse;
    /**
     * @description 返回json数据
     */
    json: (input: object) => void;
    middlewaredData: Map<string, any>;
    getMiddlewareData: (key: string) => {};
    setMiddlewareData: (key: string, value: any) => void;
}
type Cb = (ctx: Ctx) => void;
type Middleware = (ctx: Ctx, next: () => Promise<void>, pre: Map<string, any>) => Promise<void>;
export declare function next(ctx: Ctx, index?: number, middlewaredData?: Map<string, any>): Promise<void>;
export declare const server: import("http").Server<typeof IncomingMessage, typeof ServerResponse>;
export declare const router: {
    use: (middleware: Middleware) => void;
    get: (url: string, cb: Cb) => void;
    post: (url: string, cb: Cb) => {
        method: string;
        url: string;
        handler: Cb;
    };
};
export {};
